{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect, useState } from 'react';\nimport { useRouter } from 'next/router'; // import Router from 'next/router'\n\nimport { GlobalContext } from '../../context/GlobalContext'; // import fetch from 'isomorphic-unfetch';\n\nimport { motion } from 'framer-motion';\nimport ProfileInfo from '../../components/ProfileInfo';\nimport AboutMe from '../../components/AboutMe';\nimport VideoPlayer from '../../components/VideoPlayer';\nimport AddToPlaylist from '../../components/AddToPlaylist';\nimport Playlist from '../../components/PlayList';\nimport CommentSection from '../../components/CommentSection';\nimport ProfileEdit from '../../components/ProfileEdit';\nimport Favourites from '../../components/Favourites';\nimport Footer from '../../components/Footer'; // Framer-motion variants\n\nvar Profile = function Profile() {\n  _s();\n\n  var _useContext = useContext(GlobalContext),\n      authState = _useContext.authState,\n      currentUser = _useContext.currentUser,\n      profileUser = _useContext.profileUser,\n      setAutoplay = _useContext.setAutoplay,\n      fetchProfileUser = _useContext.fetchProfileUser,\n      clearProfileUser = _useContext.clearProfileUser,\n      addFavourite = _useContext.addFavourite,\n      removeFavourite = _useContext.removeFavourite; // Get the userId from the URL and fetch the profile user's data\n\n\n  var router = useRouter();\n  var userId = router.query.userId;\n  fetchProfileUser(userId, true);\n  useEffect(function () {\n    setAutoplay(false);\n  }, []); //   useEffect(() => {\n  //     fetchProfileUser(userId, true);\n  //   //   const handleRouteChange = url => {\n  //   //     // console.log('App is changing to: ', url)\n  //   //     // console.log(Router.query.userId)\n  //   // }\n  //   // Router.events.on('routeChangeStart', handleRouteChange)\n  //   // return () => {\n  //   //   Router.events.off('routeChangeStart', handleRouteChange)\n  //   // }\n  // }, [])\n\n  var _useState = useState(false),\n      editMode = _useState[0],\n      setEditMode = _useState[1]; // const [imageString, setImageString] = useState('http://localhost:5000/image/3cae4585ddf4cc55c72b174c0726f266.jpg');\n  // if (profilePhoto !== null) {\n  //   setImageString(`http://localhost:5000/image/${.filename}`)\n  // }\n  // console.log(imageString)\n  // if (profileUser.profilePhotoFilename !== null) {\n  //   const filename = profileUser.profilePhotoFilename;\n  //   setImageString(`http://localhost:5000/image/${filename}`);\n  // }\n  // if (profilePhoto !== null){\n  //   setImageString(profilePhoto.filename);\n  // }\n  // const showProfileEditSection = () => {\n  //   setEditMode(true)\n  // }\n\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    id: \"profile\",\n    className: \"jsx-1332382758\" + \" \" + \"container\"\n  }, __jsx(ProfileInfo, {\n    setEditMode: setEditMode,\n    editMode: editMode\n  }), editMode && __jsx(ProfileEdit, {\n    setEditMode: setEditMode\n  }), __jsx(AboutMe, {\n    profileUser: profileUser\n  }), __jsx(VideoPlayer, null), profileUser.id === currentUser.id && __jsx(AddToPlaylist, null), __jsx(Playlist, {\n    profileUser: profileUser\n  }), __jsx(CommentSection, {\n    profileUser: profileUser\n  }), __jsx(Favourites, {\n    profileUser: profileUser\n  })), __jsx(_JSXStyle, {\n    id: \"1332382758\"\n  }, \"#profile.jsx-1332382758{color:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxDb2RpbmdcXE15UHJvamVjdHNcXGNvZGVycy1qdWtlYm94XFxwYWdlc1xccHJvZmlsZVxcW3VzZXJJZF0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUdvQixBQUl5QixZQUNkIiwiZmlsZSI6IkM6XFxDb2RpbmdcXE15UHJvamVjdHNcXGNvZGVycy1qdWtlYm94XFxwYWdlc1xccHJvZmlsZVxcW3VzZXJJZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcidcclxuLy8gaW1wb3J0IFJvdXRlciBmcm9tICduZXh0L3JvdXRlcidcclxuaW1wb3J0IHsgR2xvYmFsQ29udGV4dCB9IGZyb20gJy4uLy4uL2NvbnRleHQvR2xvYmFsQ29udGV4dCc7XHJcbi8vIGltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xyXG5pbXBvcnQgeyBtb3Rpb24gfSBmcm9tICdmcmFtZXItbW90aW9uJztcclxuXHJcbmltcG9ydCBQcm9maWxlSW5mbyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1Byb2ZpbGVJbmZvJztcclxuaW1wb3J0IEFib3V0TWUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9BYm91dE1lJztcclxuaW1wb3J0IFZpZGVvUGxheWVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVmlkZW9QbGF5ZXInO1xyXG5pbXBvcnQgQWRkVG9QbGF5bGlzdCBmcm9tICcuLi8uLi9jb21wb25lbnRzL0FkZFRvUGxheWxpc3QnO1xyXG5pbXBvcnQgUGxheWxpc3QgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9QbGF5TGlzdCc7XHJcbmltcG9ydCBDb21tZW50U2VjdGlvbiBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NvbW1lbnRTZWN0aW9uJztcclxuaW1wb3J0IFByb2ZpbGVFZGl0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvUHJvZmlsZUVkaXQnO1xyXG5pbXBvcnQgRmF2b3VyaXRlcyBmcm9tICcuLi8uLi9jb21wb25lbnRzL0Zhdm91cml0ZXMnO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvRm9vdGVyJztcclxuXHJcbi8vIEZyYW1lci1tb3Rpb24gdmFyaWFudHNcclxuXHJcblxyXG5cclxuXHJcblxyXG5jb25zdCBQcm9maWxlID0gKCkgPT4ge1xyXG5cclxuICBjb25zdCB7IGF1dGhTdGF0ZSwgY3VycmVudFVzZXIsIHByb2ZpbGVVc2VyLCBzZXRBdXRvcGxheSwgZmV0Y2hQcm9maWxlVXNlciwgY2xlYXJQcm9maWxlVXNlciwgYWRkRmF2b3VyaXRlLCByZW1vdmVGYXZvdXJpdGV9ID0gdXNlQ29udGV4dChHbG9iYWxDb250ZXh0KTtcclxuXHJcbiAgLy8gR2V0IHRoZSB1c2VySWQgZnJvbSB0aGUgVVJMIGFuZCBmZXRjaCB0aGUgcHJvZmlsZSB1c2VyJ3MgZGF0YVxyXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpXHJcbiAgY29uc3QgeyB1c2VySWQgfSA9IHJvdXRlci5xdWVyeVxyXG4gIGZldGNoUHJvZmlsZVVzZXIodXNlcklkLCB0cnVlKTtcclxuXHJcbiAgXHJcbiAgXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgc2V0QXV0b3BsYXkoZmFsc2UpO1xyXG4gICAgfSwgW10pXHJcbiAgICBcclxuICAgIFxyXG4gIC8vICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAvLyAgICAgZmV0Y2hQcm9maWxlVXNlcih1c2VySWQsIHRydWUpO1xyXG4gIC8vICAgLy8gICBjb25zdCBoYW5kbGVSb3V0ZUNoYW5nZSA9IHVybCA9PiB7XHJcbiAgLy8gICAvLyAgICAgLy8gY29uc29sZS5sb2coJ0FwcCBpcyBjaGFuZ2luZyB0bzogJywgdXJsKVxyXG4gIC8vICAgLy8gICAgIC8vIGNvbnNvbGUubG9nKFJvdXRlci5xdWVyeS51c2VySWQpXHJcbiAgLy8gICAvLyB9XHJcblxyXG4gIC8vICAgLy8gUm91dGVyLmV2ZW50cy5vbigncm91dGVDaGFuZ2VTdGFydCcsIGhhbmRsZVJvdXRlQ2hhbmdlKVxyXG4gIC8vICAgLy8gcmV0dXJuICgpID0+IHtcclxuICAvLyAgIC8vICAgUm91dGVyLmV2ZW50cy5vZmYoJ3JvdXRlQ2hhbmdlU3RhcnQnLCBoYW5kbGVSb3V0ZUNoYW5nZSlcclxuICAvLyAgIC8vIH1cclxuICAvLyB9LCBbXSlcclxuXHJcbiAgY29uc3QgW2VkaXRNb2RlLCBzZXRFZGl0TW9kZV0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgXHJcblxyXG4gIC8vIGNvbnN0IFtpbWFnZVN0cmluZywgc2V0SW1hZ2VTdHJpbmddID0gdXNlU3RhdGUoJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9pbWFnZS8zY2FlNDU4NWRkZjRjYzU1YzcyYjE3NGMwNzI2ZjI2Ni5qcGcnKTtcclxuXHJcbiAgLy8gaWYgKHByb2ZpbGVQaG90byAhPT0gbnVsbCkge1xyXG4gIC8vICAgc2V0SW1hZ2VTdHJpbmcoYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9pbWFnZS8key5maWxlbmFtZX1gKVxyXG4gIC8vIH1cclxuICAvLyBjb25zb2xlLmxvZyhpbWFnZVN0cmluZylcclxuICAvLyBpZiAocHJvZmlsZVVzZXIucHJvZmlsZVBob3RvRmlsZW5hbWUgIT09IG51bGwpIHtcclxuICAvLyAgIGNvbnN0IGZpbGVuYW1lID0gcHJvZmlsZVVzZXIucHJvZmlsZVBob3RvRmlsZW5hbWU7XHJcbiAgICAgIFxyXG4gIC8vICAgc2V0SW1hZ2VTdHJpbmcoYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9pbWFnZS8ke2ZpbGVuYW1lfWApO1xyXG4gIC8vIH1cclxuXHJcblxyXG4gIC8vIGlmIChwcm9maWxlUGhvdG8gIT09IG51bGwpe1xyXG4gIC8vICAgc2V0SW1hZ2VTdHJpbmcocHJvZmlsZVBob3RvLmZpbGVuYW1lKTtcclxuICAvLyB9XHJcbiAgXHJcblxyXG4gIC8vIGNvbnN0IHNob3dQcm9maWxlRWRpdFNlY3Rpb24gPSAoKSA9PiB7XHJcbiAgLy8gICBzZXRFZGl0TW9kZSh0cnVlKVxyXG4gIC8vIH1cclxuXHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiIGlkPVwicHJvZmlsZVwiPlxyXG4gICAgICAgIFxyXG4gICAgICAgIDxQcm9maWxlSW5mbyBzZXRFZGl0TW9kZT17c2V0RWRpdE1vZGV9IGVkaXRNb2RlPXtlZGl0TW9kZX0gLz5cclxuXHJcbiAgICAgICAge2VkaXRNb2RlICYmXHJcbiAgICAgICAgICA8UHJvZmlsZUVkaXQgc2V0RWRpdE1vZGU9e3NldEVkaXRNb2RlfS8+XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICA8QWJvdXRNZSBwcm9maWxlVXNlcj17cHJvZmlsZVVzZXJ9Lz5cclxuXHJcbiAgICAgICAgPFZpZGVvUGxheWVyLz5cclxuXHJcbiAgICAgICAge3Byb2ZpbGVVc2VyLmlkID09PSBjdXJyZW50VXNlci5pZCAmJiBcclxuICAgICAgICAgIDxBZGRUb1BsYXlsaXN0Lz4gXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICA8UGxheWxpc3QgcHJvZmlsZVVzZXI9e3Byb2ZpbGVVc2VyfS8+XHJcblxyXG4gICAgICAgIDxDb21tZW50U2VjdGlvbiBwcm9maWxlVXNlcj17cHJvZmlsZVVzZXJ9Lz5cclxuXHJcbiAgICAgICAgPEZhdm91cml0ZXMgcHJvZmlsZVVzZXI9e3Byb2ZpbGVVc2VyfS8+XHJcblxyXG4gICAgICA8L2Rpdj5cclxuXHJcblxyXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAjcHJvZmlsZSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBgfTwvc3R5bGU+XHJcblxyXG4gICAgICAgIDxGb290ZXIgLz5cclxuICAgICAgPC8+XHJcbiAgKVxyXG59XHJcblxyXG4vLyBQcm9maWxlLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIChjdHggKSA9PiB7XHJcblxyXG4vLyAgIGNvbnNvbGUubG9nKGN0eC5xdWVyeS50b2tlbilcclxuICBcclxuLy8gICBjb25zdCBpZCA9IGN0eC5xdWVyeS51c2VySWRcclxuLy8gICAvLyBjb25zdCB1c2VyID0gYXdhaXQgZmV0Y2hQcm9maWxlVXNlcihpZCwgdHJ1ZSk7XHJcblxyXG4vLyAgIC8vIGNvbnN0IGdldFVzZXJEYXRhQnlJZCA9IGFzeW5jICh1c2VySWQpID0+IHtcclxuXHJcbi8vICAgLy8gICBjb25zdCByZXF1ZXN0Qm9keSA9IHtcclxuLy8gICAvLyAgICAgcXVlcnk6IGBcclxuLy8gICAvLyAgICAgICBxdWVyeSB7XHJcbi8vICAgLy8gICAgICAgICB1c2VyQnlJZChpZDpcIiR7dXNlcklkfVwiKSB7XHJcbi8vICAgLy8gICAgICAgICAgIGZpcnN0TmFtZSxcclxuLy8gICAvLyAgICAgICAgICAgbGFzdE5hbWUsXHJcbi8vICAgLy8gICAgICAgICAgIF9pZCxcclxuLy8gICAvLyAgICAgICAgICAgb3duZWRWaWRlb3Mge1xyXG4vLyAgIC8vICAgICAgICAgICAgIF9pZCxcclxuLy8gICAvLyAgICAgICAgICAgICB0aHVtYm5haWxVUkwsXHJcbi8vICAgLy8gICAgICAgICAgICAgdGl0bGUsXHJcbi8vICAgLy8gICAgICAgICAgICAgdmlkZW9VUkxcclxuLy8gICAvLyAgICAgICAgICAgfSxcclxuLy8gICAvLyAgICAgICAgICAgcGxheWxpc3RDb21tZW50c3tcclxuLy8gICAvLyAgICAgICAgICAgICBfaWQsXHJcbi8vICAgLy8gICAgICAgICAgICAgY29udGVudCxcclxuLy8gICAvLyAgICAgICAgICAgICBjb21tZW50ZXIge1xyXG4vLyAgIC8vICAgICAgICAgICAgICAgX2lkXHJcbi8vICAgLy8gICAgICAgICAgICAgfSxcclxuLy8gICAvLyAgICAgICAgICAgICBjcmVhdGVkQXQsXHJcbi8vICAgLy8gICAgICAgICAgICAgdXBkYXRlZEF0XHJcbi8vICAgLy8gICAgICAgICAgIH1cclxuLy8gICAvLyAgICAgICAgIH1cclxuLy8gICAvLyAgICAgICB9XHJcbi8vICAgLy8gICAgIGBcclxuLy8gICAvLyAgIH1cclxuXHJcbi8vICAgLy8gICB0cnkge1xyXG4vLyAgIC8vICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDo1MDAwL2dyYXBocWwnLCB7XHJcbi8vICAgLy8gICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbi8vICAgLy8gICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocmVxdWVzdEJvZHkpLFxyXG4vLyAgIC8vICAgICAgIGhlYWRlcnM6IHtcclxuLy8gICAvLyAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbi8vICAgLy8gICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHthdXRoU3RhdGUudG9rZW59YFxyXG4vLyAgIC8vICAgICAgIH1cclxuLy8gICAvLyAgICAgfSlcclxuXHJcbi8vICAgLy8gICAgIGlmIChyZXMuc3RhdHVzICE9PSAyMDAgJiYgcmVzLnN0YXR1cyAhPT0gMjAxKSB7XHJcbi8vICAgLy8gICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggdXNlciBkYXRhJyk7XHJcbi8vICAgLy8gICAgIH1cclxuXHJcbi8vICAgLy8gICAgIC8vIC5qc29uKCkgaXMgYSBtZXRob2QgZnJvbSBmZXRjaCBBUEkgdGhhdCBhdXRvIGV4dHJhY3RzICYgcGFyc2VzIHRoZSByZXMgYm9keVxyXG4vLyAgIC8vICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuXHJcbi8vICAgLy8gICAgIC8vIENoZWNrIGZvciBlcnJvcnMgYXJyYXkgaW4gcmVzcG9uc2VcclxuLy8gICAvLyAgICAgaWYgKGRhdGEuZXJyb3JzKSB7XHJcbi8vICAgLy8gICAgICAgZGF0YS5lcnJvcnMubWFwKGVycm9yID0+IHtcclxuLy8gICAvLyAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLm1lc3NhZ2UpXHJcbi8vICAgLy8gICAgICAgfSlcclxuLy8gICAvLyAgICAgICByZXR1cm5cclxuLy8gICAvLyAgICAgfVxyXG5cclxuLy8gICAvLyAgICAgY29uc3QgdXNlciA9IChkYXRhLmRhdGEudXNlckJ5SWQpO1xyXG4vLyAgIC8vICAgICByZXR1cm4gdXNlcjtcclxuXHJcbi8vICAgLy8gICB9IGNhdGNoIChlcnIpIHtcclxuLy8gICAvLyAgICAgY29uc29sZS5sb2coZXJyKTtcclxuLy8gICAvLyAgIH1cclxuXHJcbi8vICAgLy8gfVxyXG5cclxuLy8gICAvLyBjb25zdCB1c2VyID0gYXdhaXQgZ2V0VXNlckRhdGFCeUlkKGlkKVxyXG4vLyAgIC8vIGNvbnNvbGUubG9nKHVzZXIpXHJcbi8vICAgcmV0dXJuIHsgfVxyXG4gIFxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFByb2ZpbGU7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Coding\\\\\\\\MyProjects\\\\\\\\coders-jukebox\\\\\\\\pages\\\\\\\\profile\\\\\\\\[userId].js */\"), __jsx(Footer, null));\n}; // Profile.getInitialProps = async (ctx ) => {\n//   console.log(ctx.query.token)\n//   const id = ctx.query.userId\n//   // const user = await fetchProfileUser(id, true);\n//   // const getUserDataById = async (userId) => {\n//   //   const requestBody = {\n//   //     query: `\n//   //       query {\n//   //         userById(id:\"${userId}\") {\n//   //           firstName,\n//   //           lastName,\n//   //           _id,\n//   //           ownedVideos {\n//   //             _id,\n//   //             thumbnailURL,\n//   //             title,\n//   //             videoURL\n//   //           },\n//   //           playlistComments{\n//   //             _id,\n//   //             content,\n//   //             commenter {\n//   //               _id\n//   //             },\n//   //             createdAt,\n//   //             updatedAt\n//   //           }\n//   //         }\n//   //       }\n//   //     `\n//   //   }\n//   //   try {\n//   //     const res = await fetch('http://localhost:5000/graphql', {\n//   //       method: 'POST',\n//   //       body: JSON.stringify(requestBody),\n//   //       headers: {\n//   //         'Content-Type': 'application/json',\n//   //         'Authorization': `Bearer ${authState.token}`\n//   //       }\n//   //     })\n//   //     if (res.status !== 200 && res.status !== 201) {\n//   //       throw new Error('Failed to fetch user data');\n//   //     }\n//   //     // .json() is a method from fetch API that auto extracts & parses the res body\n//   //     const data = await res.json();\n//   //     // Check for errors array in response\n//   //     if (data.errors) {\n//   //       data.errors.map(error => {\n//   //         console.log(error.message)\n//   //       })\n//   //       return\n//   //     }\n//   //     const user = (data.data.userById);\n//   //     return user;\n//   //   } catch (err) {\n//   //     console.log(err);\n//   //   }\n//   // }\n//   // const user = await getUserDataById(id)\n//   // console.log(user)\n//   return { }\n\n\n_s(Profile, \"pwevDM3sWKlcb/VUOa05qyWtRnE=\", false, function () {\n  return [useRouter];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Coding/MyProjects/coders-jukebox/pages/profile/[userId].js"],"names":["useContext","useEffect","useState","useRouter","GlobalContext","motion","ProfileInfo","AboutMe","VideoPlayer","AddToPlaylist","Playlist","CommentSection","ProfileEdit","Favourites","Footer","Profile","authState","currentUser","profileUser","setAutoplay","fetchProfileUser","clearProfileUser","addFavourite","removeFavourite","router","userId","query","editMode","setEditMode","id"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router'\r\n// import Router from 'next/router'\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\n// import fetch from 'isomorphic-unfetch';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ProfileInfo from '../../components/ProfileInfo';\r\nimport AboutMe from '../../components/AboutMe';\r\nimport VideoPlayer from '../../components/VideoPlayer';\r\nimport AddToPlaylist from '../../components/AddToPlaylist';\r\nimport Playlist from '../../components/PlayList';\r\nimport CommentSection from '../../components/CommentSection';\r\nimport ProfileEdit from '../../components/ProfileEdit';\r\nimport Favourites from '../../components/Favourites';\r\nimport Footer from '../../components/Footer';\r\n\r\n// Framer-motion variants\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = () => {\r\n\r\n  const { authState, currentUser, profileUser, setAutoplay, fetchProfileUser, clearProfileUser, addFavourite, removeFavourite} = useContext(GlobalContext);\r\n\r\n  // Get the userId from the URL and fetch the profile user's data\r\n  const router = useRouter()\r\n  const { userId } = router.query\r\n  fetchProfileUser(userId, true);\r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n      setAutoplay(false);\r\n    }, [])\r\n    \r\n    \r\n  //   useEffect(() => {\r\n  //     fetchProfileUser(userId, true);\r\n  //   //   const handleRouteChange = url => {\r\n  //   //     // console.log('App is changing to: ', url)\r\n  //   //     // console.log(Router.query.userId)\r\n  //   // }\r\n\r\n  //   // Router.events.on('routeChangeStart', handleRouteChange)\r\n  //   // return () => {\r\n  //   //   Router.events.off('routeChangeStart', handleRouteChange)\r\n  //   // }\r\n  // }, [])\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  \r\n\r\n  // const [imageString, setImageString] = useState('http://localhost:5000/image/3cae4585ddf4cc55c72b174c0726f266.jpg');\r\n\r\n  // if (profilePhoto !== null) {\r\n  //   setImageString(`http://localhost:5000/image/${.filename}`)\r\n  // }\r\n  // console.log(imageString)\r\n  // if (profileUser.profilePhotoFilename !== null) {\r\n  //   const filename = profileUser.profilePhotoFilename;\r\n      \r\n  //   setImageString(`http://localhost:5000/image/${filename}`);\r\n  // }\r\n\r\n\r\n  // if (profilePhoto !== null){\r\n  //   setImageString(profilePhoto.filename);\r\n  // }\r\n  \r\n\r\n  // const showProfileEditSection = () => {\r\n  //   setEditMode(true)\r\n  // }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" id=\"profile\">\r\n        \r\n        <ProfileInfo setEditMode={setEditMode} editMode={editMode} />\r\n\r\n        {editMode &&\r\n          <ProfileEdit setEditMode={setEditMode}/>\r\n        }\r\n\r\n        <AboutMe profileUser={profileUser}/>\r\n\r\n        <VideoPlayer/>\r\n\r\n        {profileUser.id === currentUser.id && \r\n          <AddToPlaylist/> \r\n        }\r\n\r\n        <Playlist profileUser={profileUser}/>\r\n\r\n        <CommentSection profileUser={profileUser}/>\r\n\r\n        <Favourites profileUser={profileUser}/>\r\n\r\n      </div>\r\n\r\n\r\n        <style jsx>{`\r\n                  \r\n          #profile {\r\n            color: white;\r\n          }\r\n        \r\n        `}</style>\r\n\r\n        <Footer />\r\n      </>\r\n  )\r\n}\r\n\r\n// Profile.getInitialProps = async (ctx ) => {\r\n\r\n//   console.log(ctx.query.token)\r\n  \r\n//   const id = ctx.query.userId\r\n//   // const user = await fetchProfileUser(id, true);\r\n\r\n//   // const getUserDataById = async (userId) => {\r\n\r\n//   //   const requestBody = {\r\n//   //     query: `\r\n//   //       query {\r\n//   //         userById(id:\"${userId}\") {\r\n//   //           firstName,\r\n//   //           lastName,\r\n//   //           _id,\r\n//   //           ownedVideos {\r\n//   //             _id,\r\n//   //             thumbnailURL,\r\n//   //             title,\r\n//   //             videoURL\r\n//   //           },\r\n//   //           playlistComments{\r\n//   //             _id,\r\n//   //             content,\r\n//   //             commenter {\r\n//   //               _id\r\n//   //             },\r\n//   //             createdAt,\r\n//   //             updatedAt\r\n//   //           }\r\n//   //         }\r\n//   //       }\r\n//   //     `\r\n//   //   }\r\n\r\n//   //   try {\r\n//   //     const res = await fetch('http://localhost:5000/graphql', {\r\n//   //       method: 'POST',\r\n//   //       body: JSON.stringify(requestBody),\r\n//   //       headers: {\r\n//   //         'Content-Type': 'application/json',\r\n//   //         'Authorization': `Bearer ${authState.token}`\r\n//   //       }\r\n//   //     })\r\n\r\n//   //     if (res.status !== 200 && res.status !== 201) {\r\n//   //       throw new Error('Failed to fetch user data');\r\n//   //     }\r\n\r\n//   //     // .json() is a method from fetch API that auto extracts & parses the res body\r\n//   //     const data = await res.json();\r\n\r\n//   //     // Check for errors array in response\r\n//   //     if (data.errors) {\r\n//   //       data.errors.map(error => {\r\n//   //         console.log(error.message)\r\n//   //       })\r\n//   //       return\r\n//   //     }\r\n\r\n//   //     const user = (data.data.userById);\r\n//   //     return user;\r\n\r\n//   //   } catch (err) {\r\n//   //     console.log(err);\r\n//   //   }\r\n\r\n//   // }\r\n\r\n//   // const user = await getUserDataById(id)\r\n//   // console.log(user)\r\n//   return { }\r\n  \r\n\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}