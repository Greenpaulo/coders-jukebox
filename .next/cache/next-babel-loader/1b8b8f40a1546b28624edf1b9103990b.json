{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport { youtube } from '../apis/youtube';\nimport { YOUTUBEAPI_KEY } from '../config/keys';\nimport VideoItem from './VideoItem';\nimport colors from '../css-variables/colors';\n\nvar AddToPlaylist = function AddToPlaylist() {\n  _s();\n\n  var _useState = useState([]),\n      videos = _useState[0],\n      setVideos = _useState[1];\n\n  var searchVideoHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(searchInput) {\n      var res, videoList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return youtube.get('/search', {\n                params: {\n                  type: 'video',\n                  part: 'snippet',\n                  maxResults: 5,\n                  key: YOUTUBEAPI_KEY,\n                  q: searchInput\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n              videoList = res.data.items;\n              setVideos(videoList);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function searchVideoHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"section\", {\n    id: \"addToPlaylist\",\n    className: _JSXStyle.dynamic([[\"717247843\", [colors.gradient, colors.primary]]])\n  }, __jsx(\"div\", {\n    id: \"header\",\n    className: _JSXStyle.dynamic([[\"717247843\", [colors.gradient, colors.primary]]])\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"717247843\", [colors.gradient, colors.primary]]])\n  }, \"Add To Playlist\"), __jsx(SearchBar, {\n    placeholder: \"Search for music\",\n    searchMode: \"video\",\n    submitHandler: searchVideoHandler\n  })), __jsx(\"div\", {\n    id: \"videos\",\n    className: _JSXStyle.dynamic([[\"717247843\", [colors.gradient, colors.primary]]])\n  }, videos.length === 0 && __jsx(\"h3\", {\n    className: _JSXStyle.dynamic([[\"717247843\", [colors.gradient, colors.primary]]])\n  }, \"Search for music to add to your playlist!\"), videos.map(function (video) {\n    return __jsx(VideoItem, {\n      video: video,\n      mode: \"youtube\",\n      key: video.id.videoId\n    });\n  })), __jsx(_JSXStyle, {\n    id: \"717247843\",\n    dynamic: [colors.gradient, colors.primary]\n  }, \"section.__jsx-style-dynamic-selector{margin:2rem auto 3rem auto;width:84%;border-radius:10px;color:white;}#header.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;background:\".concat(colors.gradient, \";padding:2rem;border-radius:10px 10px 0 0;}h2.__jsx-style-dynamic-selector{color:white;margin-right:7rem;width:25%;}#videos.__jsx-style-dynamic-selector{border:1px solid \").concat(colors.primary, \";border-radius:0 0 10px 10px;border-top:none;}h3.__jsx-style-dynamic-selector{padding:2rem;text-align:center;}@media (max-width:1100px){h2.__jsx-style-dynamic-selector{min-width:26%;margin-right:1rem;}}@media (max-width:830px){#header.__jsx-style-dynamic-selector{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}h2.__jsx-style-dynamic-selector{margin-bottom:1.5rem;min-width:60%;}}@media (max-width:520px){#header.__jsx-style-dynamic-selector{padding:1.5rem;}}@media (max-width:355px){h2.__jsx-style-dynamic-selector{min-width:100%;}h3.__jsx-style-dynamic-selector{padding:1.5rem;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxDb2RpbmdcXE15UHJvamVjdHNcXGNvZGVycy1qdWtlYm94XFxjb21wb25lbnRzXFxBZGRUb1BsYXlsaXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThDYyxBQUlrQyxBQU9kLEFBT0QsQUFNa0MsQUFNakMsQUFPRyxBQU9RLEFBSUQsQUFPTixBQU1BLEFBSUEsWUE5Q0MsQ0FZQSxDQU9FLENBa0JwQixBQU1BLEFBSUEsTUFqQmdCLE1BNUNOLEdBZUEsQ0FZWixDQU9FLEdBV0EsRUE1Q21CLEdBZXJCLE1BSThCLFVBbEJoQixZQUNkLE1BSTBDLEFBY3hCLElBbUJoQixZQWxCRix3QkFkZSxhQUNlLDRCQUM5QiIsImZpbGUiOiJDOlxcQ29kaW5nXFxNeVByb2plY3RzXFxjb2RlcnMtanVrZWJveFxcY29tcG9uZW50c1xcQWRkVG9QbGF5bGlzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCBTZWFyY2hCYXIgZnJvbSAnLi9TZWFyY2hCYXInO1xyXG5pbXBvcnQgeyB5b3V0dWJlIH0gZnJvbSAnLi4vYXBpcy95b3V0dWJlJztcclxuaW1wb3J0IHsgWU9VVFVCRUFQSV9LRVkgfSBmcm9tICcuLi9jb25maWcva2V5cyc7XHJcbmltcG9ydCBWaWRlb0l0ZW0gZnJvbSAnLi9WaWRlb0l0ZW0nO1xyXG5pbXBvcnQgY29sb3JzIGZyb20gJy4uL2Nzcy12YXJpYWJsZXMvY29sb3JzJztcclxuXHJcbmNvbnN0IEFkZFRvUGxheWxpc3QgPSAoKSA9PiB7XHJcblxyXG4gIGNvbnN0IFt2aWRlb3MsIHNldFZpZGVvc10gPSB1c2VTdGF0ZShbXSk7XHJcblxyXG4gIGNvbnN0IHNlYXJjaFZpZGVvSGFuZGxlciA9IGFzeW5jIChzZWFyY2hJbnB1dCkgPT4ge1xyXG4gICAgY29uc3QgcmVzID0gYXdhaXQgeW91dHViZS5nZXQoJy9zZWFyY2gnLCB7XHJcbiAgICAgICAgcGFyYW1zOiB7XHJcbiAgICAgICAgICB0eXBlOiAndmlkZW8nLFxyXG4gICAgICAgICAgcGFydDogJ3NuaXBwZXQnLFxyXG4gICAgICAgICAgbWF4UmVzdWx0czogNSxcclxuICAgICAgICAgIGtleTogWU9VVFVCRUFQSV9LRVksXHJcbiAgICAgICAgICBxOiBzZWFyY2hJbnB1dFxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuXHJcbiAgICBjb25zdCB2aWRlb0xpc3QgPSByZXMuZGF0YS5pdGVtcztcclxuICAgIHNldFZpZGVvcyh2aWRlb0xpc3QpO1xyXG4gIH1cclxuXHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8c2VjdGlvbiBpZD1cImFkZFRvUGxheWxpc3RcIj5cclxuICAgICAgPGRpdiBpZD1cImhlYWRlclwiPlxyXG4gICAgICAgIDxoMj5BZGQgVG8gUGxheWxpc3Q8L2gyPlxyXG4gICAgICAgIDxTZWFyY2hCYXIgcGxhY2Vob2xkZXI9J1NlYXJjaCBmb3IgbXVzaWMnIHNlYXJjaE1vZGU9XCJ2aWRlb1wiIHN1Ym1pdEhhbmRsZXI9e3NlYXJjaFZpZGVvSGFuZGxlcn0vPlxyXG4gICAgICA8L2Rpdj5cclxuXHJcblxyXG4gICAgICA8ZGl2IGlkPVwidmlkZW9zXCI+XHJcbiAgICAgICAgeyB2aWRlb3MubGVuZ3RoID09PSAwICYmXHJcbiAgICAgICAgICA8aDM+U2VhcmNoIGZvciBtdXNpYyB0byBhZGQgdG8geW91ciBwbGF5bGlzdCE8L2gzPlxyXG4gICAgICAgIH1cclxuICAgICAgICB7dmlkZW9zLm1hcCh2aWRlbyA9PiB7XHJcbiAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8VmlkZW9JdGVtIHZpZGVvPXt2aWRlb30gbW9kZT1cInlvdXR1YmVcIiBrZXk9e3ZpZGVvLmlkLnZpZGVvSWR9Lz5cclxuICAgICAgICAgIClcclxuICAgICAgICB9KX1cclxuICAgICAgPC9kaXY+XHJcblxyXG4gIDxzdHlsZSBqc3g+e2BcclxuXHJcbiAgICBzZWN0aW9uIHtcclxuICAgICAgbWFyZ2luOiAycmVtIGF1dG8gM3JlbSBhdXRvO1xyXG4gICAgICB3aWR0aDogODQlO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAjaGVhZGVyIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYmFja2dyb3VuZDogJHtjb2xvcnMuZ3JhZGllbnR9O1xyXG4gICAgICBwYWRkaW5nOiAycmVtO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4IDEwcHggMCAwO1xyXG4gICAgfVxyXG5cclxuICAgIGgyIHtcclxuICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDdyZW07XHJcbiAgICAgIHdpZHRoOiAyNSU7XHJcbiAgICB9XHJcblxyXG4gICAgI3ZpZGVvcyB7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR7Y29sb3JzLnByaW1hcnl9O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAwIDAgMTBweCAxMHB4O1xyXG4gICAgICBib3JkZXItdG9wOiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIGgzIHtcclxuICAgICAgcGFkZGluZzogMnJlbTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC8qIE1lZGlhIHF1ZXJpZXMgKi9cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcclxuICAgICAgaDIge1xyXG4gICAgICAgIG1pbi13aWR0aDogMjYlO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MzBweCkge1xyXG4gICAgICAjaGVhZGVyIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBoMiB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xyXG4gICAgICAgIG1pbi13aWR0aDogNjAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUyMHB4KSB7XHJcbiAgICAgICNoZWFkZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDEuNXJlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNTVweCkge1xyXG4gICAgICBoMiB7XHJcbiAgICAgICAgbWluLXdpZHRoOiAxMDAlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBoMyB7XHJcbiAgICAgICAgcGFkZGluZzogMS41cmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gIGB9PC9zdHlsZT5cclxuXHJcblxyXG5cclxuICAgIDwvc2VjdGlvbj5cclxuICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFkZFRvUGxheWxpc3Q7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Coding\\\\\\\\MyProjects\\\\\\\\coders-jukebox\\\\\\\\components\\\\\\\\AddToPlaylist.js */\")));\n};\n\n_s(AddToPlaylist, \"SbG6CMM6FaXD5465NFUm02FT42U=\");\n\n_c = AddToPlaylist;\nexport default AddToPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToPlaylist\");","map":{"version":3,"sources":["C:/Coding/MyProjects/coders-jukebox/components/AddToPlaylist.js"],"names":["useState","SearchBar","youtube","YOUTUBEAPI_KEY","VideoItem","colors","AddToPlaylist","videos","setVideos","searchVideoHandler","searchInput","get","params","type","part","maxResults","key","q","res","videoList","data","items","gradient","primary","length","map","video","id","videoId"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBAEEN,QAAQ,CAAC,EAAD,CAFV;AAAA,MAEnBO,MAFmB;AAAA,MAEXC,SAFW;;AAI1B,MAAMC,kBAAkB;AAAA,wEAAG,iBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPR,OAAO,CAACS,GAAR,CAAY,SAAZ,EAAuB;AACrCC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,IAAI,EAAE,OADA;AAENC,kBAAAA,IAAI,EAAE,SAFA;AAGNC,kBAAAA,UAAU,EAAE,CAHN;AAINC,kBAAAA,GAAG,EAAEb,cAJC;AAKNc,kBAAAA,CAAC,EAAEP;AALG;AAD6B,eAAvB,CADO;;AAAA;AACnBQ,cAAAA,GADmB;AAWnBC,cAAAA,SAXmB,GAWPD,GAAG,CAACE,IAAJ,CAASC,KAXF;AAYzBb,cAAAA,SAAS,CAACW,SAAD,CAAT;;AAZyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBV,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AAgBA,SACE;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA,iDA6BgBJ,MAAM,CAACiB,QA7BvB,EAyCsBjB,MAAM,CAACkB,OAzC7B;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA,iDA4BclB,MAAM,CAACiB,QA5BrB,EAwCoBjB,MAAM,CAACkB,OAxC3B;AAAA,KACE;AAAA,iDA2BYlB,MAAM,CAACiB,QA3BnB,EAuCkBjB,MAAM,CAACkB,OAvCzB;AAAA,uBADF,EAEE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC,kBAAvB;AAA0C,IAAA,UAAU,EAAC,OAArD;AAA6D,IAAA,aAAa,EAAEd;AAA5E,IAFF,CADF,EAOE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA,iDAsBcJ,MAAM,CAACiB,QAtBrB,EAkCoBjB,MAAM,CAACkB,OAlC3B;AAAA,KACIhB,MAAM,CAACiB,MAAP,KAAkB,CAAlB,IACA;AAAA,iDAoBUnB,MAAM,CAACiB,QApBjB,EAgCgBjB,MAAM,CAACkB,OAhCvB;AAAA,iDAFJ,EAIGhB,MAAM,CAACkB,GAAP,CAAW,UAAAC,KAAK,EAAI;AACnB,WACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,KAAlB;AAAyB,MAAA,IAAI,EAAC,SAA9B;AAAwC,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAN,CAASC;AAAtD,MADF;AAGD,GAJA,CAJH,CAPF;AAAA;AAAA,cA6BgBvB,MAAM,CAACiB,QA7BvB,EAyCsBjB,MAAM,CAACkB,OAzC7B;AAAA,mPA6BgBlB,MAAM,CAACiB,QA7BvB,uLAyCsBjB,MAAM,CAACkB,OAzC7B,s0JADF;AA6FD,CAjHD;;GAAMjB,a;;KAAAA,a;AAmHN,eAAeA,aAAf","sourcesContent":["import { useState } from 'react'\r\nimport SearchBar from './SearchBar';\r\nimport { youtube } from '../apis/youtube';\r\nimport { YOUTUBEAPI_KEY } from '../config/keys';\r\nimport VideoItem from './VideoItem';\r\nimport colors from '../css-variables/colors';\r\n\r\nconst AddToPlaylist = () => {\r\n\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  const searchVideoHandler = async (searchInput) => {\r\n    const res = await youtube.get('/search', {\r\n        params: {\r\n          type: 'video',\r\n          part: 'snippet',\r\n          maxResults: 5,\r\n          key: YOUTUBEAPI_KEY,\r\n          q: searchInput\r\n        }\r\n      })\r\n\r\n    const videoList = res.data.items;\r\n    setVideos(videoList);\r\n  }\r\n\r\n\r\n  return (\r\n    <section id=\"addToPlaylist\">\r\n      <div id=\"header\">\r\n        <h2>Add To Playlist</h2>\r\n        <SearchBar placeholder='Search for music' searchMode=\"video\" submitHandler={searchVideoHandler}/>\r\n      </div>\r\n\r\n\r\n      <div id=\"videos\">\r\n        { videos.length === 0 &&\r\n          <h3>Search for music to add to your playlist!</h3>\r\n        }\r\n        {videos.map(video => {\r\n          return (\r\n            <VideoItem video={video} mode=\"youtube\" key={video.id.videoId}/>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n  <style jsx>{`\r\n\r\n    section {\r\n      margin: 2rem auto 3rem auto;\r\n      width: 84%;\r\n      border-radius: 10px;\r\n      color: white;\r\n    }\r\n  \r\n    #header {\r\n      display: flex;\r\n      background: ${colors.gradient};\r\n      padding: 2rem;\r\n      border-radius: 10px 10px 0 0;\r\n    }\r\n\r\n    h2 {\r\n      color: white;\r\n      margin-right: 7rem;\r\n      width: 25%;\r\n    }\r\n\r\n    #videos {\r\n      border: 1px solid ${colors.primary};\r\n      border-radius: 0 0 10px 10px;\r\n      border-top: none;\r\n    }\r\n\r\n    h3 {\r\n      padding: 2rem;\r\n      text-align: center;\r\n    }\r\n\r\n    /* Media queries */\r\n    @media (max-width: 1100px) {\r\n      h2 {\r\n        min-width: 26%;\r\n        margin-right: 1rem;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 830px) {\r\n      #header {\r\n        flex-direction: column;\r\n      }\r\n\r\n      h2 {\r\n        margin-bottom: 1.5rem;\r\n        min-width: 60%;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 520px) {\r\n      #header {\r\n        padding: 1.5rem;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 355px) {\r\n      h2 {\r\n        min-width: 100%;\r\n      }\r\n\r\n      h3 {\r\n        padding: 1.5rem;\r\n      }\r\n    }\r\n\r\n  `}</style>\r\n\r\n\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AddToPlaylist;"]},"metadata":{},"sourceType":"module"}